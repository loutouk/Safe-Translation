let pile = ref [] ;
let id = ref 0 ;
let generateId -> let x = !id in id := !id + 1 ; x ;
let pushId id -> pile := id::!pile ;
let popId -> pile := pop !pile ;
let checkId id -> if peek !pile = id then raise{} else () ;

let a = ref 1 in
   let b = ref 1 in
   let fibo n externalFunc z ->
     let id = generateId{} in pushId{id} ; if n = 0 then ()
     else
       let t = !b in
       b := !a + !b; externalFunc {z} ; checkId{id} ;
       a := t; externalFunc {a, z} ; checkId{id} ;
       fibo {n - 1}
   in fibo {29}; !a ; popId{}